openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/productos/:
    get:
      operationId: listProductos
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
          description: ''
      tags:
      - api
    post:
      operationId: createProducto
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Producto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
          description: ''
      tags:
      - api
  /api/productos/{id}/:
    get:
      operationId: retrieveProducto
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este producto."
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
          description: ''
      tags:
      - api
    put:
      operationId: updateProducto
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este producto."
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Producto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProducto
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este producto."
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Producto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProducto
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este producto."
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/lotes/:
    get:
      operationId: listLotes
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lote'
          description: ''
      tags:
      - api
    post:
      operationId: createLote
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lote'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lote'
          description: ''
      tags:
      - api
  /api/lotes/{id}/:
    get:
      operationId: retrieveLote
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este lote."
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lote'
          description: ''
      tags:
      - api
    put:
      operationId: updateLote
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este lote."
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lote'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lote'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateLote
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este lote."
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lote'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lote'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyLote
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este lote."
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: "Un t\xE9rmino de b\xFAsqueda."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/movimientos/:
    get:
      operationId: listMovimientoStocks
      description: ''
      parameters:
      - name: tipo
        required: false
        in: query
        description: ''
        schema:
          type: string
      - name: lote
        required: false
        in: query
        description: ''
        schema:
          type: string
      - name: lote__producto
        required: false
        in: query
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovimientoStock'
          description: ''
      tags:
      - api
  /api/movimientos/{id}/:
    get:
      operationId: retrieveMovimientoStock
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este movimiento\
          \ stock."
        schema:
          type: string
      - name: tipo
        required: false
        in: query
        description: ''
        schema:
          type: string
      - name: lote
        required: false
        in: query
        description: ''
        schema:
          type: string
      - name: lote__producto
        required: false
        in: query
        description: ''
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: "Qu\xE9 campo usar para ordenar los resultados."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovimientoStock'
          description: ''
      tags:
      - api
  /api/scan/{codigo}/:
    get:
      operationId: retrievescan
      description: ''
      parameters:
      - name: codigo
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/reportes/por_vencer/:
    get:
      operationId: listlotes_por_vencers
      description: "/api/reportes/por_vencer/?dias=60\nDevuelve lotes con stock>0\
        \ que vencen en <= N d\xEDas (default 60)."
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/productos/ingreso-scan/:
    post:
      operationId: ingresoScanProducto
      description: Crea o busca Producto + Lote a partir de un scan y suma 1 (o 'cantidad')
        al stock.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Producto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
          description: ''
      tags:
      - api
  /api/productos/{id}/egreso-fefo/:
    post:
      operationId: egresoFefoProducto
      description: POST /api/productos/{id}/egreso-fefo
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este producto."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Producto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
          description: ''
      tags:
      - api
  /api/lotes/{id}/ajuste/:
    post:
      operationId: ajusteLote
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este lote."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lote'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lote'
          description: ''
      tags:
      - api
  /api/lotes/{id}/egreso/:
    post:
      operationId: egresoLote
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este lote."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lote'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lote'
          description: ''
      tags:
      - api
  /api/lotes/{id}/ingreso/:
    post:
      operationId: ingresoLote
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "Un valor de entero \xFAnico que identifique este lote."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lote'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lote'
          description: ''
      tags:
      - api
  /api/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
components:
  schemas:
    Producto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        gtin:
          type: string
          maxLength: 14
        nombre:
          type: string
          maxLength: 200
        laboratorio:
          type: string
          maxLength: 200
        estado:
          type: string
          maxLength: 10
        lotes:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              numero_lote:
                type: string
                maxLength: 80
              fecha_venc:
                type: string
                format: date
              stock:
                type: integer
                maximum: 9223372036854775807
                minimum: -9223372036854775808
                format: int64
              producto:
                type: integer
            required:
            - numero_lote
            - fecha_venc
            - producto
          readOnly: true
      required:
      - gtin
      - nombre
    Lote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        numero_lote:
          type: string
          maxLength: 80
        fecha_venc:
          type: string
          format: date
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        producto:
          type: integer
      required:
      - numero_lote
      - fecha_venc
      - producto
    MovimientoStock:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lote:
          type: integer
        tipo:
          enum:
          - INGRESO
          - EGRESO
          - AJUSTE
          type: string
        cantidad:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        motivo:
          type: string
          maxLength: 255
        documento_ref:
          type: string
          maxLength: 100
        creado_en:
          type: string
          format: date-time
          readOnly: true
        aplicado_en:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        usuario:
          type: string
          readOnly: true
          nullable: true
        stock_antes:
          type: integer
          readOnly: true
          nullable: true
        stock_despues:
          type: integer
          readOnly: true
          nullable: true
      required:
      - lote
      - tipo
      - cantidad
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
